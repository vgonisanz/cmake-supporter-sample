#####################################################################################################################################################################################
# This is a Modules CMake configuration script.
#   This script organize what modules compile according with user configuration.
# The steps are:
#   1ยบ Configure a header with options to use
#   2ยบ Configure options with differents libraries to be built
#   3ยบ Add module if option is TRUE
#####################################################################################################################################################################################

# Modules step I: Configure modules header in installation path. Never mix autogenerated headers with source code.
# ------------------------------------------------------------------------------------------------------
PRINT("Configuring ${PROJ_MAIN_NAME}_config.h ...")
configure_file("${CMAKE_CURRENT_SOURCE_DIR}/common/in/${PROJ_MAIN_NAME}_config.h.in"
                "${${PROJ_MAIN_NAME}_PATH_INSTALL}/common/include/${PROJ_MAIN_NAME}_config.h" )

PRINTSUBTITLE("   Adding modules...")

# Modules step II: Configure options with differents libraries to be built
# ------------------------------------------------------------------------------------------------------
OPTION(${PROJ_MAIN_NAME}_BUILD_FOO			 "Compile module FOO" 			ON )
OPTION(${PROJ_MAIN_NAME}_BUILD_VAR	     "Compile module VAR" 			ON )

# Modules step III: Add module if option is TRUE
# ------------------------------------------------------------------------------------------------------
IF(${PROJ_MAIN_NAME}_BUILD_FOO)
  ADD_SUBDIRECTORY(foo)
ENDIF()

IF(${PROJ_MAIN_NAME}_BUILD_VAR)
  ADD_SUBDIRECTORY(var)
ENDIF()

# Install common headers always, needed for all. TODO review why and explain. Works? why is here??? bad variables ${${PROJ_NAME}_HEADERS}
# ------------------------------------------------------------------------------------------------------
INSTALL(FILES ${${PROJ_NAME}_HEADERS}
        DESTINATION "${${PROJ_MAIN_NAME}_PATH_INSTALL}/${PROJ_MAIN_NAME}/common/include/"
        )
